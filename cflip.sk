

options:
	Name.GUI: &6» &b&n&lCoin&r&3&n&lFlip&r
	Name.GUI.Loading: &B&lC&3&lF&r
	Prefix: &b&lFast&3&lGens &c&l»
	
#________________________________________________________________________________________________________#

function roomToggle(p: player, type: int = 0):
	if {_type} is 0:
		if {coinflip.roomtoggle::%{_p}%} is 0:
			if {_p} has permission "cfroom.med":
				set {coinflip.roomtoggle::%{_p}%} to 1
				set {coinflip.room.selected::%{_p}%} to "&8[&6Med&8]"
				make {_p} execute command "cf"
			else:
				roomToggle({_p}, 100)
		else if {coinflip.roomtoggle::%{_p}%} is 1:
			if {_p} has permission "cfroom.high":
				set {coinflip.roomtoggle::%{_p}%} to 2
				set {coinflip.room.selected::%{_p}%} to "&8[&cHigh&8]"
				make {_p} execute command "cf"
			else:
				roomToggle({_p}, 100)
		else if {coinflip.roomtoggle::%{_p}%} is 2:
			if {_p} has permission "cfroom.mega":
				set {coinflip.roomtoggle::%{_p}%} to 3
				set {coinflip.room.selected::%{_p}%} to "&8[&4Mega&8]"
				make {_p} execute command "cf"
			else:
				roomToggle({_p}, 100)
		else if {coinflip.roomtoggle::%{_p}%} is 3:
			if {_p} has permission "cfroom.ultra":
				set {coinflip.roomtoggle::%{_p}%} to 4
				set {coinflip.room.selected::%{_p}%} to "&8[&dUltra&8]"
				make {_p} execute command "cf"
			else:
				roomToggle({_p}, 100)
		else if {coinflip.roomtoggle::%{_p}%} is 4:
			if {_p} has permission "cfroom.insane":
				set {coinflip.roomtoggle::%{_p}%} to 5
				set {coinflip.room.selected::%{_p}%} to "&8[&5Insane&8]"
				make {_p} execute command "cf"
			else:
				roomToggle({_p}, 100)
		else if {coinflip.roomtoggle::%{_p}%} is 5:
			if {_p} has permission "cfroom.ludicrous":
				set {coinflip.roomtoggle::%{_p}%} to 6
				set {coinflip.room.selected::%{_p}%} to "&8[&b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls&8]"
				make {_p} execute command "cf"
			else:
				roomToggle({_p}, 100)
		else if {coinflip.roomtoggle::%{_p}%} is 6:
			set {coinflip.roomtoggle::%{_p}%} to 0
			set {coinflip.room.selected::%{_p}%} to "&8[&eLow&8]"
			make {_p} execute command "cf"
	if {_type} is 100:
		send "{@Name.GUI} &eYou are not of the required rank to enter this room." to {_p}
		stop

command /cfadd:
	trigger:
		remove 1 from {coinflip.low::*}
	
on inventory close:
	if event-inventory's display name contains "{@Name.GUI}":
		set {cf.open::%player%} to false

command /cf [<text>] [<int>] [<player>]:
	aliases: /coinflip, /cflip, /coinf
	trigger:
		if arg 1 is not set:
			set {_bal} to player's balance
			open chest with 4 rows named "{@Name.GUI} %{coinflip.room.selected::%player%}%" to player
			format slot 27 of player with nether star named "&6» &eInformation" with lore "", "&6» &eYour Money&7: &c%{_bal}%", "&6» &eNumber of CoinFlips won&7: &c%{coinflip.win::%player%}%" and "&6» &eNumber of CoinFlips Lost&7: &c%{coinflip.lose::%player%}%" to be unstealable
			format slot 31 of player with book named "&6» &eUsage" with lore "" and  "&6» &e&o/cf create <amount>" to be unstealable
			set {_slot} to 0
			wait 2 ticks
			set {cf.open::%player%} to true
			if {coinflip.roomtoggle::%player%} is 0:
				loop {coinflip.low::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			else if {coinflip.roomtoggle::%player%} is 1:
				loop {coinflip.med::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			else if {coinflip.roomtoggle::%player%} is 2:
				loop {coinflip.high::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			else if {coinflip.roomtoggle::%player%} is 3:
				loop {coinflip.mega::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			else if {coinflip.roomtoggle::%player%} is 4:
				loop {coinflip.ultra::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			else if {coinflip.roomtoggle::%player%} is 5:
				loop {coinflip.insane::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			else if {coinflip.roomtoggle::%player%} is 6:
				loop {coinflip.ludicrous::*}:
					format slot {_slot} of player with skull of "%loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%loop-value%" and "&6» &eBet&7: $&c%{coinflip.bet.%loop-value%}%" to run [make player execute command "cf play 12 %loop-value%"]
					add 1 to {_slot}
					wait 6 ticks
					if {cf.open::%player%} is false:
						stop loop
					else:
						continue
			format gui slot 35 of player with unpowered stone button named "&6» &eChange Room" with lore "", "&6» &eLow Roller &8(&a$250 &e» &a$499k&8)", "&6» &6Med &eRoller &8(&a$500k &e» &a$4.9M&8)", "&6» &cHigh &eRoller &8(&a$5M &e» &a249M&8)", "&6» &4Mega &eRoller &8(&a250M &e» &a$999M&8)", "&6» &dUltra &eRoller &8(&a1B &e» &a$1.9B&8)", "&6» &5Insane &eRoller &8(&a2B &e» &a$9.9B&8)", "&6» &b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls &eRoller &8(&a10B &eand up&8)", "" and "&6» &eCurrent %{coinflip.room.selected::%player%}%" to run function roomToggle(player, 0)	

			
		if arg 1 is "h" or "help":
			send ""
			send "{@Prefix} &b&n&lCoin&r &n&lFlip&r"
			send ""
			send "&c&l» &eTo make a Coinflip do &6&o/cf create <amount>"
			send ""
			send "&c&l» &eYou can change rooms by clicking on the button in &6&o/cf "
			send ""
			send "&c&l» &eA number between &8(&b0&8) &eand &8(&b100&8) &ewill be selected"
			send "&c&l» &eIf the number lands on &8(&b50&8) &eneither of you win"
			send ""
			send "&c&l» &eIf you log off before your &b&lC&3&lF &r&eis played, your money will be returned."
			send ""
			send "&c&l» &eTen percent of final bet will be taken."
			send ""

			
#________________________________________________________________________________________________________#
	

		if arg 1 is "create":
			if arg 2 is set:		
				if player's balance is greater than or equal to arg-2:
					if {coinflip.roomtoggle::%player%} is 0:	
						if arg 2 is between 250 and 499999:
							if {cf.%player%} is not set:
								if (amount of {coinflip.low::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.low::*}	
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."	
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&eLow Roller&8] &eroom"
							send "&eYou must bet between &6$250 &eand &6$499,999"
							send "&eIf you wish to bet different please change room"
							send ""
					
					if {coinflip.roomtoggle::%player%} is 1:
						if arg 2 is between 500000 and 4999999:
							if {cf.%player%} is not set:
								if (amount of {coinflip.med::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.med::*}
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."		
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&6Med &eRoller&8] &eroom"
							send "&eYou must bet between &6$500,000 &eand &6$4,999,999"
							send "&eIf you wish to bet different please change room"
							send ""
					
					if {coinflip.roomtoggle::%player%} is 2:
						if arg 2 is between 5000000 and 249999999:
							if {cf.%player%} is not set:
								if (amount of {coinflip.high::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.high::*}
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."		
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&cHigh &eRoller&8] &eroom"
							send "&eYou must bet between &6$5,000,000 &eand &6$249,999,999"
							send "&eIf you wish to bet different please change room"
							send ""
					
					if {coinflip.roomtoggle::%player%} is 3:
						if arg 2 is between 250000000 and 99999999:
							if {cf.%player%} is not set:
								if (amount of {coinflip.mega::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.mega::*}
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."		
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&4Mega &eRoller&8] &eroom"
							send "&eYou must bet between &6$250,000,000 &eand &6$999,999,999"
							send "&eIf you wish to bet different please change room"
							send ""
					if {coinflip.roomtoggle::%player%} is 4:
						if arg 2 is between 1000000000 and 1999999999:
							if {cf.%player%} is not set:
								if (amount of {coinflip.ultra::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.ultra::*}
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."		
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&dUltra &eRoller&8] &eroom"
							send "&eYou must bet between &6$1,000,000,000 &eand &6$1,999,999,999"
							send "&eIf you wish to bet different please change room"
							send ""
					if {coinflip.roomtoggle::%player%} is 5:
						if arg 2 is between 2000000000 and 9999999999:
							if {cf.%player%} is not set:
								if (amount of {coinflip.insane::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.insane::*}
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."		
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&5Insane &eRoller&8] &eroom"
							send "&eYou must bet between &6$2,000,000,000 &eand &6$9,999,999,999"
							send "&eIf you wish to bet different please change room"
							send ""
					if {coinflip.roomtoggle::%player%} is 6:
						if arg 2 is more than 10000000000:
							if {cf.%player%} is not set:
								if (amount of {coinflip.ludicrous::*}) < 27:
									set {cf.%player%} to true
									send "{@Prefix} &7&oLoading..."
									wait 1 seconds
									send "{@Prefix} &7&oCreating your CoinFlip..."
									wait 2 seconds
									send "{@Prefix} &7&oCoinFlip Created "
									send "{@Prefix} &7&oWaiting for a player."
									set {coinflip.bet.%player%} to arg 2
									make console execute command "eco take %player% %{coinflip.bet.%player%}%"
									add player to {coinflip::*}
									add player to {coinflip.ludicrous::*}
								else:
									send "{@Prefix} &eYou cannot create one at the moment, the room is full."
							else:
								send "{@Prefix} &eYou cannot create another one at the moment."		
						else:
							send ""
							send "{@Prefix} &eYou are in the &8[&b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls &eRoller&8] &eroom"
							send "&eYou must bet atleast &610,000,000,000"
							send "&eIf you wish to bet different please change room"
							send ""
				else:
					send "{@Prefix} &eYou do not have enough money."
			else:
				send "{@Prefix} &ePlease enter an amount."		
#________________________________________________________________________________________________________						
					

		if arg 1 is "play":
			if arg 2 is set:
				if arg 3 is set:
					if arg 3 is online:
						if arg 3 is not player:
							if player's balance is greater than or equal to {coinflip.bet.%arg-3%}:
								clear {cf.%arg-3%}
								clear {cf.%player%}
								send "{@Prefix} &7&oLoading ..."
								send "{@Prefix} &7&oLoading ..." to arg 3		
								wait 3 ticks
								send "{@Prefix} &7&oCoinFlip Opening"
								send "{@Prefix} &7&oCoinFlip Opening" to arg 3
								make console execute command "eco take %player% %{coinflip.bet.%arg-3%}%"
								set {FinalBet.%player%} to {coinflip.bet.%arg-3%} + {coinflip.bet.%arg-3%}
								set {FinalBet.%player%} to (({FinalBet.%player%}/100) * 90)
								add player to {Cf.%player%::*}
								add arg 3 to {Cf.%player%::*}
								remove arg 3 from {coinflip::*}
								remove arg 3 from {coinflip.low::*}
								remove arg 3 from {coinflip.med::*}
								remove arg 3 from {coinflip.high::*}
								remove arg 3 from {coinflip.mega::*}
								remove arg 3 from {coinflip.ultra::*}
								remove arg 3 from {coinflip.insane::*}
								remove arg 3 from {coinflip.ludicrous::*}								
								loop 15 times:
									open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading." to player
									open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading." to arg 3		
									wait 3 ticks
									open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading.." to player
									open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading.." to arg 3									
									wait 3 ticks
									open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading..." to player
									open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading..." to arg 3
									wait 3 ticks
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading.." to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading.." to arg 3
								wait 3 ticks
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading." to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading." to arg 3
								wait 3 ticks							
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading" to arg 3
								wait 3 ticks							
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoadin" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoadin" to arg 3
								wait 3 ticks
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoadi" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoadi" to arg 3								
								wait 3 ticks							
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoad" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoad" to arg 3
								wait 3 ticks
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoa" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLoa" to arg 3
								wait 3 ticks
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLo" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oLo" to arg 3
								wait 3 ticks		
								open chest with 1 row named "{@Name.GUI.Loading} &7&oL" to player
								open chest with 1 row named "{@Name.GUI.Loading} &7&oL" to arg 3
								wait 3 ticks	
								open chest with 1 row named "{@Name.GUI.Loading}" to player
								open chest with 1 row named "{@Name.GUI.Loading}" to arg 3
								wait 3 ticks		
								set {_slot} to 0
								loop 50 times:
									loop 9 times:
										set {_RI} to random integer between 1 and 15
										set {_FIGURE} to random integer between 9999 and 99999
										if event-inventory's display name is "{@Name.GUI.Loading}":
											evaluate "format slot %{_slot}% of player with 160:%{_RI}% named ""&6» &e%{_FIGURE}%"" to be unstealable"
										if event-inventory's display name is "{@Name.GUI.Loading}":
											if {_RI} = 1:
												format slot {_slot} of arg 3 with orange glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with orange glass named "&6» &e%{_FIGURE}%" to be unstealable												
											if {_RI} = 2:
												format slot {_slot} of arg 3 with magenta glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with magenta glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 3:
												format slot {_slot} of arg 3 with light blue glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with light blue glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 4:
												format slot {_slot} of arg 3 with yellow glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with yellow glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 5:
												format slot {_slot} of arg 3 with light green glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with light green glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 6:
												format slot {_slot} of arg 3 with pink glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with pink glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 7:
												format slot {_slot} of arg 3 with gray glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with gray glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 8:
												format slot {_slot} of arg 3 with light gray glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with light gray glass named "&6» &e%{_FIGURE}%" to be unstealable	
											if {_RI} = 9:
												format slot {_slot} of arg 3 with cyan glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with cyan glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 10:
												format slot {_slot} of arg 3 with purple glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with purple glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 11:
												format slot {_slot} of arg 3 with blue glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with blue glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 12:
												format slot {_slot} of arg 3 with brown glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with brown glass named "&6» &e%{_FIGURE}%" to be unstealable	
											if {_RI} = 13:
												format slot {_slot} of arg 3 with green glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with green glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 14:
												format slot {_slot} of arg 3 with red glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with red glass named "&6» &e%{_FIGURE}%" to be unstealable
											if {_RI} = 15:
												format slot {_slot} of arg 3 with black glass named "&6» &e%{_FIGURE}%" to be unstealable
												format slot {_slot} of player with black glass named "&6» &e%{_FIGURE}%" to be unstealable												
										add 1 to {_slot}
									set {_FIGURE} to random integer between 1 and 2
									if {_FIGURE} = 1:
										if event-inventory's display name is "{@Name.GUI.Loading}":
											format slot 4 of arg 3 with skull of "%player%" parsed as offline player named "&6» &e%player%" to be unstealable
										if event-inventory's display name is "{@Name.GUI.Loading}":
											format slot 4 of player with skull of "%arg-3%" parsed as offline player named "&6» &e%arg-3%" to be unstealable
									else if {_FIGURE} = 2:
										if event-inventory's display name is "{@Name.GUI.Loading}":
											format slot 4 of arg 3 with skull of "%arg-3%" parsed as offline player named "&6» &e%arg-3%" to be unstealable
										if event-inventory's display name is "{@Name.GUI.Loading}":
											format slot 4 of player with skull of "%player%" parsed as offline player named "&6» &e%player%" to be unstealable									
									set {_slot} to 0
									wait 3 ticks		
								set {_END} to random integer between 0 and 100
								close player's inventory
								close arg 3's inventory
								if {_END} > 51:
									add 1 to {coinflip.win::%player%} 
									add 1 to {coinflip.lose::%arg-3%}								
									send ""
									send "" to arg 3
									send ""
									send "" to arg 3
									send "{@Prefix} &7&oYou won the Coinflip !"
									send "{@Prefix} &7&oYou lost the CoinFlip !" to arg 3
									send "{@Prefix} &7&oSo you won &6$%{FinalBet.%player%}%"
									send "{@Prefix} &7&oYou lost &6$%{coinflip.bet.%arg-3%}%" to arg 3
									send "{@Prefix} &7The winning number was &6%{_END}%" to arg 3
									send "{@Prefix} &7The winning number was &6%{_END}%"
									send ""
									send "" to arg 3
									send ""
									send "" to arg 3
									make console execute command "eco give %player% %{FinalBet.%player%}%"
								if {_END} < 49:
									add 1 to {coinflip.lose::%player%} 
									add 1 to {coinflip.win::%arg-3%}
									send ""
									send "" to arg 3
									send ""
									send "" to arg 3
									send "{@Prefix} &7&oYou won the Coinflip !" to arg 3
									send "{@Prefix} &7&oYou lost the CoinFlip !" 
									send "{@Prefix} &7&oSo you won &6$%{FinalBet.%player%}%" to arg 3
									send "{@Prefix} &7&oYou lost &6$%{coinflip.bet.%arg-3%}%"
									send "{@Prefix} &7The winning number was &6%{_END}%" to arg 3
									send "{@Prefix} &7The winning number was &6%{_END}%"									
									send ""
									send "" to arg 3
									send ""
									send "" to arg 3
									make console execute command "eco give %arg-3% %{FinalBet.%player%}%"		
								else if {_END} is 50:
									add 1 to {coinflip.lose::%player%} 
									add 1 to {coinflip.lose::%arg-3%}
									send ""
									send "" to arg 3
									send ""
									send "" to arg 3
									send "{@Prefix} &7&oYou lost the Coinflip !" to arg 3
									send "{@Prefix} &7&oYou lost the CoinFlip !" 
									send "{@Prefix} &7&oYou lost &6$%{coinflip.bet.%arg-3%}%" to arg 3
									send "{@Prefix} &7&oYou lost &6$%{coinflip.bet.%arg-3%}%"
									send "{@Prefix} &7The winning number was &6%{_END}%" to arg 3
									send "{@Prefix} &7The winning number was &6%{_END}%"	
									send "{@Prefix} &7Therefore you both lost &6%{_END}%" to arg 3
									send "{@Prefix} &7Therefore you both lost &6%{_END}%"								
									send ""
									send "" to arg 3
									send ""
									send "" to arg 3
								clear {coinflip.bet.%arg-3%}
								#if {coinflip::*} contains arg 3:
									#broadcast "yes"
									#remove arg 3 from {coinflip::*}
									#remove arg 3 from {coinflip.low::*}
									#remove arg 3 from {coinflip.med::*}
									#remove arg 3 from {coinflip.high::*}
									#remove arg 3 from {coinflip.mega::*}
									#remove arg 3 from {coinflip.ultra::*}
									#remove arg 3 from {coinflip.insane::*}
									#remove arg 3 from {coinflip.ludicrous::*}
								stop
							else:
								send "{@Prefix} &eYou do not have enough money."
						else:
							send "{@Prefix} &eYou can't play alone."							

#________________________________________________________________________________________________________	
					
					
		if arg 1 is "reload" or "rl":
			if player is cf.admin:
				set {_t} to now
				make player execute command "sk reload %script name%"
				send "&6[&eCoinFlip&6] &eSkript created by &bCeacer1 &7(Skript reload in &8%difference between now and {_t}%&7)"
			else:
				send "&cYou do not have the required permission to do this."


on join:
	if {coinflip.win::%player%} is not set:
		set {coinflip.win::%player%} to 0
	if {coinflip.lose::%player%} is not set:
		set {coinflip.lose::%player%} to 0
	if {coinflip.roomtoggle::%player%} is not set:
		set {coinflip.roomtoggle::%player%} to 0 
	if {coinflip.room.selected::%player%} is not set:
		set {coinflip.room.selected::%player%} to "&8[&eLow&8]"
		
on quit:
	remove player from {coinflip::*}
	remove player from {coinflip.low::*}
	remove player from {coinflip.med::*}
	remove player from {coinflip.high::*}
	remove player from {coinflip.mega::*}
	remove player from {coinflip.ultra::*}
	remove player from {coinflip.insane::*}
	remove player from {coinflip.ludicrous::*}
	if {cf.%player%} is true:
		make console execute command "eco give %player% %{coinflip.bet.%player%}%"
		clear {coinflip.bet.%player%}
		set {cf.%player%} to false
	
	
		