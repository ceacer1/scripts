options:
    GUIName: &3Slots  

variables: 
    {Low} = 100
    {Med} = 1000
    {High} = 10000
    {Mega} = 100000
    {Ultra} = 1000000
    {Insane} = 100000000
    {Ludicrous} = 1000000000

function slotsBetCheck(p: player, room: text, type: number):
    if {_room} is "low":
        set {_min} to 1
        set {_max} to 100
    if {_room} is "med":
        set {_min} to 100
        set {_max} to 1000
    if {_room} is "high":
        set {_min} to 1000
        set {_max} to 10000
    if {_room} is "mega":
        set {_min} to 10000
        set {_max} to 100000
    if {_room} is "ultra":
        set {_min} to 100000
        set {_max} to 1000000
    if {_room} is "insane":
        set {_min} to 1000000
        set {_max} to 100000000
    if {_room} is "ludicrous":
        set {_min} to 100000000
        set {_max} to 1000000000
    if {slotscurrentbet::%{_p}%} is not between {_min} and {_max}:
        set {slotscurrentbet::%{_p}%} to ({_max} / 2)
    set {_minus3} to ({_max}/100 *35)
    set {_minus2} to ({_max}/100 *20)
    set {_minus1} to ({_max}/100 *5)
    set {_add1} to ({_max}/100 *5)
    set {_add2} to ({_max}/100 *20)
    set {_add3} to ({_max}/100 *35)
    if {_type} is 0:
        slotsPlay({_p}, {_room})
    else:
        slotsChangeBet({_p}, {_room}, {_minus3}, {_minus2}, {_minus1}, {_min}, {_max}, {_add1}, {_add2}, {_add3})

function slotsformatNum(n: number) :: string:
    set {_l::*} to split "k,M,B,T,Qn,Qi,Sx" at ","
    set {_i} to min(floor(log({_n})/3), size of {_l::*})
    return "%{_n}%" if {_i} <= 0
    set {_i2} to 1000^{_i}
    set {_n} to "%{_n}/{_i2}%%{_l::%{_i}%}%"
    return {_n}

function slotsChangeBet(p: player, room: text, minus3: number, minus2: number, minus1: number, min: number, max: number, add1: number, add2: number, add3: number):
    set {_minus3a} to slotsformatNum({_minus3})
    set {_minus2a} to slotsformatNum({_minus2})
    set {_minus1a} to slotsformatNum({_minus1})
    set {_add1a} to slotsformatNum({_add1})
    set {_add2a} to slotsformatNum({_add2})
    set {_add3a} to slotsformatNum({_add3})
    set {_bet} to slotsformatNum({slotscurrentbet::%{_p}%})
    create a gui with virtual chest named "Slots" with 1 row:
        make gui slot (0 and 8) to gray glass pane named " "
        make gui slot 1 to red glass pane named "&c-%{_minus3a}%":
            remove {_minus3} from {slotscurrentbet::%{_p}%}
            if {slotscurrentbet::%{_p}%} < {_min}:
                set {slotscurrentbet::%{_p}%} to {_min}
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 2 to red glass pane named "&c-%{_minus2a}%":
            remove {_minus2} from {slotscurrentbet::%{_p}%}
            if {slotscurrentbet::%{_p}%} < {_min}:
                set {slotscurrentbet::%{_p}%} to {_min}
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 3 to red glass pane named "&c-%{_minus1`a}%":
            remove {_minus1} from {slotscurrentbet::%{_p}%}
            if {slotscurrentbet::%{_p}%} < {_min}:
                set {slotscurrentbet::%{_p}%} to {_min}
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 4 to glowing sunflower named "&6Bet" with lore "" and "&6Current&7: &8(&2$&a%{_bet}%&8)"
        make gui slot 5 to green glass pane named "&a+%{_add1a}%":
            add {_add1} to {slotscurrentbet::%{_p}%}
            if {slotscurrentbet::%{_p}%} > {_max}:
                set {slotscurrentbet::%{_p}%} to {_max}
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 6 to green glass pane named "&a+%{_add2a}%":
            add {_add2} to {slotscurrentbet::%{_p}%}
            if {slotscurrentbet::%{_p}%} > {_max}:
                set {slotscurrentbet::%{_p}%} to {_max}
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 7 to green glass pane named "&a+%{_add3a}%":
            add {_add3} to {slotscurrentbet::%{_p}%}
            if {slotscurrentbet::%{_p}%} > {_max}:
                set {slotscurrentbet::%{_p}%} to {_max}
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 8 to glowing arrow named "&7Back":
            slotsPlay({_p}, {_room})
    open last gui to {_p}
    stop

function slotsPlay(p: player, room: text):
    set {_bet} to slotsformatNum({slotscurrentbet::%{_p}%})
    set {_jp} to slotsformatNum({slotsjackpot::%{_room}%})
    set {_bal} to slotsformatNum({_p}'s balance)
    create a gui with virtual chest named "{@GUIName}" with 6 rows:
        loop 54 times:
            make gui slot (loop-number - 1) to gray glass pane named " "
        make gui slot 12 to Light Gray Dye named " "
        make gui slot 13 to Yellow Dye named " "
        make gui slot 14 to Green Dye named " "
        make gui slot (21, 22 and 23) to Purple Dye named " "
        make gui slot 30 to Orange Dye named " "
        make gui slot 31 to Pink Dye named " "
        make gui slot 32 to Light Blue Dye named " "
        make gui slot (2, 3, 4, 5, 6, 11, 15, 20, 24, 29, 33, 38, 39, 40, 41 and 42) to black glass pane named " "
        make gui slot (18, 19, 20, 24, 25 and 26) to light green glass pane named "&aPay Line"
        make gui slot 45 to skull of {_p} named "&6%{_p}%" with lore "" and "&6Balance&7: &2$&a%{_bal}%"
        make gui slot 48 to glowing cauldron named "&bJ&3a&bc&3k&bp&3o&bt" with lore "" and "&6Current&7: &2$&a%{_jp}%"
        make gui slot 49 to glowing sunflower named "&6Bet" with lore "", "&6Current&7: &8(&2$&a%{_bet}%&8)", "" and "&a&lClick to change":
            slotsBetCheck({_p}, {_room}, 1)
        make gui slot 50 to stone button named "&aSpin":
            if {slotsspinning::%{_p}%} is false:
                if {_p}'s balance >= {slotscurrentbet::%{_p}%}:
                    remove {slotscurrentbet::%{_p}%} from {_p}'s balance
                    add ({slotscurrentbet::%{_p}%}/100 * 10) to {slotsjackpot::%{_room}%}
                    set {slotsspinning::%{_p}%} to true
                    slotsRun({_p}, {_room}, {slotscurrentbet::%{_p}%})
                else:
                    send "" to {_p}
                    send "        &c- Error -" to {_p}
                    send "        &c- Not enough money -" to {_p}
                    send "" to {_p}
            else:
                cancel event
        make gui slot 53 to glowing arrow named "&7Back":
            slotsMenu({_p})
    open last gui to {_p}
    set {slotsguiopen::%{_p}%} to 0
    stop

function slotsPrizeOutcome(p: player, room: text, prize: number, bet: number):
    if {_prize} is 1:
        set {_w} to ({slotscurrentbet::%{_p}%} * 2.5)
        add {_w} to {_p}'s balance
        set {_w1} to slotsformatNum({_w})
        send "" to {_p}
        send "        &eYou have won the &bMinor &eJackpot" to {_p}
        send "        &eAmount Won: &2$&a%{_w1}%" to {_p}
        send "" to {_p}
    if {_prize} is 2:
        add {slotsjackpot::%{_room}%} to {_p}'s balance
        set {_w1} to slotsformatNum({slotsjackpot::%{_room}%})
        send "" to {_p}
        send "        &eYou have won the &3Major &eJackpot" to {_p}
        send "        &eAmount Won: &2$&a%{_w1}%" to {_p}
        send "" to {_p}
        set {slotsjackpot::%{_room}%} to {%{_room}%}
        


function slotsRun(p: player, room: text, bet: number):
    set {_items::*} to "Light Gray Dye", "Yellow Dye", "Green Dye", "Pink Dye", "Light Blue Dye", "Purple Dye" and "Orange Dye"
    set {_slots1::*} to 12, 13, 14, 21, 22, 23, 30, 31 and 32
    remove gui slot {_slots1::*} of {_p}
    loop 15 times:
        loop 3 times:
            if {slotsguiopen::%{_p}%} is 1:
                stop loop
            set {_reel1} to a random element out of {_items::*}
            set {_reel2} to a random element out of {_items::*}
            set {_reel3} to a random element out of {_items::*}
            format gui slot 12 of {_p} with {_reel1} parsed as an item
            format gui slot 13 of {_p} with {_reel2} parsed as an item
            format gui slot 14 of {_p} with {_reel3} parsed as an item
            format gui slot 21 of {_p} with {_reel12} parsed as an item
            format gui slot 22 of {_p} with {_reel22} parsed as an item
            format gui slot 23 of {_p} with {_reel32} parsed as an item
            format gui slot 30 of {_p} with {_reel13} parsed as an item
            format gui slot 31 of {_p} with {_reel23} parsed as an item
            format gui slot 32 of {_p} with {_reel33} parsed as an item
            set {_slot1} to {_reel12}
            set {_slot2} to {_reel22}
            set {_slot3} to {_reel32}
            set {_reel13} to {_reel12}
            set {_reel23} to {_reel22}
            set {_reel33} to {_reel32}
            set {_reel12} to {_reel1}  
            set {_reel22} to {_reel2}
            set {_reel32} to {_reel3}         
            wait 2 ticks
    if {_slot1} is {_slot3}:
        if {_slot1} is {_slot2}:
            slotsPrizeOutcome({_p}, {_room}, 2, {_bet})
    else if {_slot1} is {_slot2}:
        slotsPrizeOutcome({_p}, {_room}, 1, {_bet})
    wait 1 second
    set {slotsspinning::%{_p}%} to false

function slotsMenu(p: player):
    set {slotsspinning::%{_p}%} to false
    set {_bal} to slotsformatNum({_p}'s balance)
    create a gui with virtual chest named "{@GUIName} &3Menu" with 3 rows:
        loop 27 times:
            make gui slot (loop-number - 1) to gray glass pane named " "
        make gui slot 4 to skull of {_p} named "&6%{_p}%" with lore "" and "&6Balance&7: &2$&a%{_bal}%"
        make gui slot 10 to glowing coal named "&eLow &7Room" with lore "", "&6Bets&7:" and "&2$&a1 &e» &2$&a100":
            slotsBetCheck({_p}, "low", 0)
        make gui slot 11 to glowing iron ingot named "&6Med &7Room" with lore "", "&6Bets&7:" and "&2$&a100 &e» &2$&a1K":
            slotsBetCheck({_p}, "med", 0)
        make gui slot 12 to glowing gold ingot named "&cHigh &7Room" with lore "", "&6Bets&7:" and "&2$&a1K &e» &2$&a10K":
            slotsBetCheck({_p}, "high", 0)
        make gui slot 13 to glowing lapis lazuli named "&4Mega &7Room" with lore "", "&6Bets&7:" and "&2$&a10K &e» &2$&a100K":
            slotsBetCheck({_p}, "mega", 0)
        make gui slot 14 to glowing redstone dust named "&dUltra &7Room" with lore "", "&6Bets&7:" and "&2$&a100K &e» &2$&a1M":
            slotsBetCheck({_p}, "ultra", 0)
        make gui slot 15 to glowing diamond named "&5Insane &7Room" with lore "", "&6Bets&7:" and "&2$&a1M &e» &2$&a100M":
            slotsBetCheck({_p}, "insane", 0)
        make gui slot 16 to glowing emerald named "&b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls &7Room" with lore "", "&6Bets&7:" and "&2$&a100M &e» &2$&a1B":
            slotsBetCheck({_p}, "ludicrous", 0)
    open last gui to {_p}
    stop

on script load:
    add "Low", "Med", "High", "Mega", "Ultra", "Insane" and "Ludicrous" to {_list::*}
    loop {_list::*}:
        if {slotsjackpot::%loop-value%} is not set:
            set {slotsjackpot::%loop-value%} to {%loop-value%}

on inventory close:
    if event-inventory's display name contains "{@GUIName}":
        if {slotsguiopen::%event-player%} is 0:
            set {slotsguiopen::%event-player%} to 1

command /slots:
    trigger:
        slotsMenu(player)


