
options:
    prefix: &b&lFast&3&lGens

on tab complete of "/team":
	set tab completions for position 1 to "create", "list", "invite", "pay", "join", "leave", "remove", "help" and "disband"
	if tab arg-1 = "list", "remove", "pay", "invite", "leave", "join" or "disband":
		set tab completions for position 2 to (indexes of {teams::*})

on first join:
    if {team.plot.has-members.%uuid of player%} is not set:
        set {team.plot.has-members.%uuid of player%} to false

command /gen [<text>] [<text>] [<offline player>]:
    trigger:
        if arg-1 is "add":
            if arg-2 is "count":
                if arg-3 is set:
                    add 1 to {gens.%uuid of arg-3%.gencount}
            if arg-2 is "cap":
                if arg-3 is set:
                    add 1 to {gens.%uuid of arg-3%.gencap}
        if arg-1 is "remove": 
            if arg-2 is "count":
                if arg-3 is set:
                    remove 1 from {gens.%uuid of arg-3%.gencount}
            if arg-2 is "cap":
                if arg-3 is set:
                    remove 1 from {gens.%uuid of arg-3%.gencap}

command /team [<text>] [<string>] [<offline player>] [<int>]:
    trigger:
        if arg-1 is not set:
            send ""
            send "&8&m--&8[&b&lFast&3Gens &6&lTeams&8]&8&m--"
            send ""
            send "&cInvalid Usage: &6/team <text> <text> <player>" to player
            send "&eUse &6/team help &efor more info." to player

        if arg-1 is "help":
            send ""
            send "&8&m--&8[&b&lFast&3Gens &6&lTeams&8]&8&m--"
            send ""
            send formatted "<tooltip: &dCommand: %nl% &6/team create <team name> %nl%%nl% &dUse: %nl% &eCreates a team.> &6/team create <team name> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team list <team name> %nl%%nl% &dUse: %nl% &eShows a teams information.> &6/team list <team name> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team pay <team name> <player> %nl%%nl% &dUse: %nl% &ePays a team mate.> &6/team pay <team name> <player> <amount> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team invite <team name> <player> %nl%%nl% &dUse: %nl% &eInvites a player to your team. %nl% &eYou can only have 2 member in a team.> &6/team invite <team name> <player> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team join <team name> %nl%%nl% &dUse: %nl% &eJoins a team that has invited you.> &6/team join <team name> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team leave <team name> %nl%%nl% &dUse: %nl% &eLeaves the team you are in.> &6/team leave <team name> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team remove <team name> %nl%%nl% &dUse: %nl% &eRemoves a player from your team.> &6/team remove <team name> <player> <reset>"
            send formatted "<tooltip: &dCommand: %nl% &6/team disband <team name> %nl%%nl% &dUse: %nl% &eDisbands the team you own.> &6/team disband <team name> <reset>"
            send ""
            send "&8&m-&8[&eHover for more Info&8]&8&m-"

        if arg-1 is "create":
            if arg-2 is set:
                if {teams::*} does not contain arg-2:
                    if {teams.owner::%player%} is not set:
                        set {teams::%arg-2%} to arg-2 
                        add player to {teams.%arg-2%::*}
                        set {teams.owner::%player%} to true
                        set {teams.amount.players.%arg-2%} to 1
                        add 1 to {teams.amount.total}
                        add player to {teams.%arg-2%.owner::*}
                        add player to {team.plot.members.%arg-2%::*}
                        send "{@prefix} &8- &eYou have created a team named &6%arg-2%"
                    else:
                        send "{@prefix} &8- &eYou are already the owner of a team!" to player
                else:
                    send "{@prefix} &8- &eThe team &6%arg-2% &ealready exists." to player
            else:
                send "{@prefix} &8- &ePlease enter a team name" to player

        if arg-1 is "list":
            if {teams::*} contains arg-2:
                if {teams.amount.players.%arg-2%} is 2:
                    loop {teams.%arg-2%::*}:
                        set {_teams.balance.%arg-2%::%loop-value%} to balance of loop-value
                        replace every "$" with "" in {_teams.balance.%arg-2%::%loop-value%}
                        set {_teams.balance.%arg-2%::%loop-value%} to {_teams.balance.%arg-2%::%loop-value%} parsed as number
                        set {teams.gens.%arg-2%::%loop-value%} to {gens.%uuid of loop-value%.gencount}
                        set {teams.gencap.%arg-2%::%loop-value%} to {gens.%uuid of loop-value%.gencap}
                    loop {_teams.balance.%arg-2%::*}:
                        add loop-value to {_total}
                    loop {teams.gens.%arg-2%::*}:
                        add loop-value to {_gentotal}
                    loop {teams.gencap.%arg-2%::*}:
                        send "%loop-value%"
                        add loop-value to {_gencaptotal}
                else if {teams.amount.players.%arg-2%} is 1:
                    loop {teams.%arg-2%::*}:
                        set {_total} to the balance of loop-value
                        set {_gentotal} to {gens.%uuid of loop-value%.gencount}
                        set {_gencaptotal} to {gens.%uuid of loop-value%.gencap}
                message "&8&m--&8[&b&lFast&3Gens &6&lTeams&8]&8&m--"
                message ""
                message "&eTeam Name:"
                message "&a&l%arg-2%"
                message ""
                message "&eTotal Team Balance:"
                message "&a%{_total}%"
                message ""
                message "&eTotal Gen Amount"
                message "&8(&a%{_gentotal}%&7/&a%{_gencaptotal}%&8)"
                message ""
                loop {teams.%arg-2%::*}:
                    send "&6%loop-value% &8(&a%{gens.%uuid of loop-value%.gencount}%&7/&a%{gens.%uuid of loop-value%.gencap}%&8)" 
                message ""
                
                
            else:
                send "{@prefix} &8- &ePlease enter a team name" to player
        
        if arg-1 is "pay":
            if arg-2 is set:
                if arg-3 is set:
                    if arg-4 is set:
                        loop {teams::*}:
                            if {teams.%loop-value%::*} contains arg-3:
                                set {teams.pay::%player%} to true
                                make player say "/pay %arg-3% %arg-4%"
                                stop

                            else:
                                send "{@prefix} &eYou can only pay members of your team." to player
                    else:
                        send "{@prefix} &ePlease enter an amount." to player
                else:
                    send "{@prefix} &ePlease enter a player name." to player
            else:
                send "{@prefix} &ePlease enter a team name." to player



        if arg-1 is "invite":
            if arg-2 is set:
                if {teams::*} contains arg-2:
                    if {teams.%arg-2%::*} contains player:
                        if {teams.owner::%player%} is true:
                            if {teams.amount.players.%arg-2%} is 1:
                                if arg 3 is set:
                                    if {teams.owner::%arg-3%} is not set:
                                        if {teams.member::%arg-3%} is not set:
                                            if arg 3 is online:
                                                if arg 3 is not executor:
                                                    send "{@prefix} &8- &eYou have invited &6%arg-3% &eto &6%arg-2%" to player
                                                    set {teams.invite.%arg-2%::%arg-3%} to true
                                                    send "" to arg-3
                                                    send "{@prefix} &8- &eYou have been invited to join &6%arg-2% " to arg-3
                                                    json("%arg-3%", "&e&m===== &6Click to Join &e&m===== ||ttp:&cClick to Join &a%arg-2%&c.||cmd:/team join %arg-2%")
                                                    send "" to arg-3
                                                else:
                                                    send "{@prefix} &8- &eYou cannot invite yourself to your team." to player  
                                            else:
                                                send "{@prefix} &8- &eThe player you are trying to invite is not online." to player
                                        else:
                                            send "{@prefix} &8- &eThe player you are trying to invite is already in a team." to player
                                    else:
                                        send "{@prefix} &8- &eThe player you are trying to add is the owner of a team." to player
                                else:
                                    send "{@prefix} &8- &ePlease enter a player name." to player
                            else:
                                send "{@prefix} &8- &eYou already have 2 members in your team." to player
                        else:
                            send "{@prefix} &8- &eYou are not the owner of &6%arg-2% &eand therefore cannot invite players to it." to player
                    else:
                        send "{@prefix} &8- &eYou are not a member of the team &6%arg-2% &eand therefore cannot invite players to it." to player
                else:
                    send "{@prefix} &8- &eThe team &6%arg-2% &edoes not exist." to player
            else:
                send "{@prefix} &8- &ePlease enter a team name" to player
        
        if arg-1 is "join":
            if {teams::*} contains arg-2:
                if {teams.invite.%arg-2%::%player%} is true:
                    add player to {teams.%arg-2%::*}
                    set {teams.member::%player%} to true
                    set {teams.amount.players.%arg-2%} to 2
                    clear {teams.invite.%arg-2%::%player%}
                    send "{@prefix} &8- &eYou have joined team &6%arg-2%" to player
                    send "{@prefix} &8- &6%executor% &ehad joined &6%arg-2%" to {teams.%arg-2%.owner::*}
                    stop
                else:
                    send "{@prefix} &8- &eYou have not been invited to join the team &6%arg-2%." to player
                    stop
            else:
                send "{@prefix} &8- &eThe team &6%arg-2% &edoes not exist." to player
                stop


        if arg-1 is "leave":
            if arg-2 is set:
                if {teams::*} contains arg-2:
                    if {teams.%arg-2%::*} contains player:
                        if {teams.owner::%player%} is true:
                            if {teams.%arg-2%.owner::*} contains player:
                                send "{@prefix} &8- &eYou cannot leave a team if you are the owner. Please use &6/team disband %arg-2%" to player
                        if {teams.member::%player%} is true:
                            remove player from {teams.%arg-2%::*}
                            clear {teams.member::%player%}
                            clear {teams.gencap.%arg-2%::*}
                            set {teams.amount.players.%arg-2%} to 1
                            send "{@prefix} &8- &eYou have left the team &6%arg-2%" to player
                            send "{@prefix} &8- &6%player% &6has left your team" to {teams.%arg-2%.owner::*}
                    else:
                        send "{@prefix} &8- &eYou are not a member of the team &6%arg-2% &etherefore you cannot leave it." to player
                else:
                    send "{@prefix} &8- &eThe team &6%arg-2% &edoes not exist." to player
            else:
                send "{@prefix} &8- &ePlease enter a team name" to player
        
        if arg-1 is "remove":
            if arg-2 is set:
                if {teams::*} contains arg-2:
                    if {teams.%arg-2%::*} contains player:
                        if arg-3 is set:
                            if {teams.%arg-2%::*} contains arg-3:
                                if arg-2 is not player:
                                    if {teams.owner::%player%} is true:
                                        if {teams.%arg-2%.owner::*} contains player:
                                            remove arg-3 from {teams.%arg-2%::*}
                                            clear {teams.member::%arg-3%}
                                            clear {teams.gencap.%arg-2%::*}
                                            set {teams.amount.players.%arg-2%} to 1
                                            send "{@prefix} &8- &eYou have removed &6%arg-3% &efrom the team &6%arg-2%" to player
                                            send "{@prefix} &8- &eYou have been removed from the team &6%arg-2%" to arg-3
                                    else:
                                        send "{@prefix} &8- &eYou are not the owner of the team &6%arg-2% &etherefore cannot disband it." to player 
                                else:
                                    send "{@prefix} &8- &eYou cannot remove yourself from your team." to player
                            else:
                                send "{@prefix} &8- &eThe player &6%arg-3% &eis not in your team therefore cannot be removed." to player 
                        else:
                            send "{@prefix} &8- &ePlease enter a player name." to player
                    else:
                        send "{@prefix} &8- &eYou are not a member of the team &6%arg-2% &etherefore you cannot disband it." to player
                else:
                    send "{@prefix} &8- &eThe team &6%arg-2% &edoes not exist." to player
            else:
                send "{@prefix} &8- &ePlease enter a team name" to player

        if arg-1 is "disband":
            if arg-2 is set:
                if {teams::*} contains arg-2:
                    if {teams.%arg-2%::*} contains player:
                        if {teams.owner::%player%} is true:
                            if {teams.%arg-2%.owner::*} contains player:
                                if {team.plot.members.amount.%arg-2%} is not set:
                                    if {teams.amount.players.%arg-2%} is 1:
                                        clear {teams.%arg-2%::*}
                                        clear {teams.%arg-2%.owner::*}
                                        clear {teams.owner::%player%}
                                        clear {teams.amount.players.%arg-2%}
                                        clear {team.plot.members.%arg-2%::*}
                                        remove arg-2 from {teams::*}
                                        send "{@prefix} &8- &eYour team &6%arg-2% &ehas been disbanded" to player
                                    else:
                                        send "{@prefix} &8- &eYou cannot disband a team whilst another player is in it." to player
                                else:
                                    send "{@prefix} &8- &eYou cannot disband a team whilst another player is added to your plot." to player
                        else:
                            send "{@prefix} &8- &eYou are not the owner of the team &6%arg-2% &etherefore cannot disband it." to player 
                    else:
                        send "{@prefix} &8- &eYou are not a member of the team &6%arg-2% &etherefore you cannot disband it." to player
                else:
                    send "{@prefix} &8- &eThe team &6%arg-2% &edoes not exist." to player
            else:
                send "{@prefix} &8- &ePlease enter a team name" to player
                        


        if arg-1 is "clear":
            if player has permission "op":
                loop {teams::*}:
                    clear {teams.%loop-value%::*}
                    clear {teams.%loop-value%.owner::*}
                    clear {teams.amount.players.%loop-value%}
                    loop {teams.%loop-value%::*}:
                        clear {teams::%loop-value-2%}
                        clear {teams.member::%loop-value-2%}
                        clear {teams.owner::%loop-value-2%}
                send "{@prefix} &8- &eTeams have been cleared" to player
        
        if arg-1 is "test":
            send "hi" to player
            loop {teams::*}:
                send "%{teams.%loop-value%::*}%" to player
                send "%{teams.%loop-value%.owner::*}%" to player
                send "%{teams.amount.players.%loop-value%}%" to player
                send "%{teams::*}%" to player
                send "%{teams.member::*}%" to player
                send "%{teams.owner::*}%" to player



command /plot [<text>] [<player>]:
    trigger:
        if arg-1 is "add":
            if arg-2 is set:
                loop {teams::*}:
                    if {teams.%loop-value%::*} contains arg-2:
                        if {team.plot.members.%arg-2%::*} does not contain arg-2:
                            if {gens.%uuid of arg-2%.gencount} is not 0:
                                send "&8[&6P2&8] &6The player &7%arg-2% &6has placed gens." to player
                                send "&8[&6P2&8] &6All gens must be picked up before they can be added." to player
                                stop
                            else:
                                set {teams.plot.add::%player%} to true
                                add arg-2 to {team.plot.members.%arg-2%::*}
                                set {team.plot.has-members.%uuid of player%} to true
                                make player say "/p add %arg-2%"
                                stop
                        else:
                            set {teams.plot.add::%player%} to true
                            make player say "/p add %arg-2%"
                            stop
                    else:
                        send "&8[&6P2&8] &6The player &7%arg-2% &6is not part of your team." to player
                        send "&8[&6P2&8] &6You can only add members of your team." to player
                        stop
            else:
                send "&8[&6P2&8] &6Usage: &7/plot add <player|*>" to player
                stop
        
        if arg-1 is "trust":
            if arg-2 is set:
                loop {teams::*}:
                    if {teams.%loop-value%::*} contains arg-2:
                        if {team.plot.members.%arg-2%::*} does not contain arg-2:
                            if {gens.%uuid of arg-2%.gencount} is not 0:
                                send "&8[&6P2&8] &6The player &7%arg-2% &6has placed gens." to player
                                send "&8[&6P2&8] &6All gens must be picked up before they can be trusted." to player
                                stop
                            else:
                                set {teams.plot.trust::%player%} to true
                                add arg-2 to {team.plot.members.%arg-2%::*}
                                set {team.plot.has-members.%uuid of player%} to true
                                make player say "/p trust %arg-2%"
                                stop
                        else:
                            set {teams.plot.trust::%player%} to true
                            make player say "/p trust %arg-2%"
                            stop
                    else:
                        send "&8[&6P2&8] &6The player &7%arg-2% &6is not part of your team." to player
                        send "&8[&6P2&8] &6You can only trust members of your team." to player
                        stop
            else:
                send "&8[&6P2&8] &6Usage: &7/plot trust <player|*>" to player
                stop
        
        if arg-1 is "remove":
            if arg-2 is set:
                loop {teams::*}:
                    if {teams.%loop-value%::*} contains arg-2:
                        if {team.plot.members.%arg-2%::*} does not contain arg-2:
                            send "&8[&6P2&8] &6The player &7%arg-2% &6is not on your plot therefore cannot be removed." to player
                            stop
                        else:
                            if {gens.%uuid of arg-2%.gencount} is not 0:
                                send "&8[&6P2&8] &6The player &7%arg-2% &6has placed gens." to player
                                send "&8[&6P2&8] &6All gens must be picked up before they can be removed." to player
                                stop
                            else:
                                set {teams.plot.remove::%player%} to true
                                remove arg-2 from {team.plot.members.%arg-2%::*}
                                set {team.plot.has-members.%uuid of player%} to false
                                make player say "/p remove %arg-2%"
                                stop
                    else:
                        send "&8[&6P2&8] &6The player &7%arg-2% &6is not part of your team." to player
                        send "&8[&6P2&8] &6You can only trust members of your team." to player
                        stop
        
        if arg-1 is "delete":
            if {team.plot.has-members.%uuid of player%} is false:
                if {gens.%uuid of player%.gencount} is not 0:
                    send "&8[&6P2&8] &6You still have gens placed, please remove them." to player
                else:
                    send "%{gens.%uuid of player%.gencount}%" to player
                    set {teams.plot.delete::%player%} to true
                    make player say "/p delete"
            else:
                send "&8[&6P2&8] &6You can not delete a plot that has players added to it." to player

        if arg-1 is not set:
            send "&8&m---------&r &6Plot² Help &8&m---------" to player
            send "&6/plot help claiming &8- &7Claiming" to player
            send "&6/plot help teleport &8- &7Teleport" to player
            send "&6/plot help protection &8- &7Protection" to player
            send "&6/plot help chat &8- &7Chat" to player
            send "&6/plot help web &8- &7Web" to player
            send "&6/plot help cosmetic &8- &7Cosmetic" to player
            send "&6/plot help info &8- &7Info" to player
            send "&6/plot help debug &8- &7Debug" to player
            send "&6/plot help admin &8- &7Admin" to player
            send "&6/plot help all &8- &7Display all commands" to player
            send "&8&m---------&r &6Plot² Help &8&m---------" to player   
        else if arg-1 is not "add", "delete", "remove" or "trust":
            send "&8&m---------&r &c&l!!NOTICE!! &8&m---------"
            send "&6Team functionality is being used," to player
            send "&6for all commands please replace" to player
            send "&o&7""/plot"" &r&6with &o&7""/p, /plotme, /plotsquared"" " to player
            send "&8&m---------&r &c&l!!NOTICE!! &8&m---------"    



on command "/pay":
    if player has permission "op":
        stop
    if {teams.pay::%player%} is true:
        set {teams.pay::%player%} to false
        stop
    else:
        send "{@prefix} &eDue to the team functionality being used, please use: &7/team pay <team> <player|*>" to player
        cancel event

on command "/p add":
    if player has permission "op":
        stop
    if {teams.plot.add::%player%} is true:
        set {teams.plot.add::%player%} to false
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot add <player|*>" to player
        cancel event

on command "/p trust":
    if player has permission "op":
        stop
    if {teams.plot.trust::%player%} is true:
        set {teams.plot.trust::%player%} to false
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot trust <player|*>" to player
        cancel event

on command "/p remove":
    if player has permission "op":
        stop
    if {teams.plot.remove::%player%} is true:
        set {teams.plot.remove::%player%} to false
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot remove <player|*>" to player
        cancel event

on command "/p delete":
    if player has permission "op":
        stop
    if {teams.plot.delete::%player%} is true:
        set {teams.plot.delete::%player%} to false
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot delete <player|*>" to player
        cancel event

on command "/plotme add":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot add <player|*>" to player
        cancel event

on command "/plotme trust":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot trust <player|*>" to player
        cancel event

on command "/plotme remove":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot remove <player|*>" to player
        cancel event

on command "/plotsquared add":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot add <player|*>" to player
        cancel event

on command "/plotsquared trust":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot trust <player|*>" to player
        cancel event

on command "/plotsquared remove":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot remove <player|*>" to player
        cancel event

on command "/p2 add":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot add <player|*>" to player
        cancel event

on command "/p2 trust":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot trust <player|*>" to player
        cancel event

on command "/p2 remove":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot remove <player|*>" to player
        cancel event

on command "/2 add":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot add <player|*>" to player
        cancel event

on command "/2 trust":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot trust <player|*>" to player
        cancel event

on command "/2 remove":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot remove <player|*>" to player
        cancel event

on command "/ps add":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot add <player|*>" to player
        cancel event

on command "/ps trust":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot trust <player|*>" to player
        cancel event

on command "/ps remove":
    if player has permission "op":
        stop
    else:
        send "&8[&6P2&8] &6Due to the team functionality being used, please use: &7/plot remove <player|*>" to player
        cancel event