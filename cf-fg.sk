on skript load:
    create a new mongo client to host "mongodb+srv://test:test@cluster0.adzx4.mongodb.net/Cluster0?retryWrites=true&w=majority" as "coinflip"
    set {client.cf} to client named "coinflip"
    set {database.cf} to mongo database named "mongosk" of {client.cf}
    set {collection.cflogs} to collection named "CoinFlipLogs" of {database.cf}
    set {collection.cf} to collection named "CoinFlip" of {database.cf}
    set {collection.cfbets} to collection named "CoinFlipBets" of {database.cf}

on join:
    set {_search} to document where "UUID of Player" is UUID of player in {collection.cf}
    if {_search} is not set:
        set {_doc} to new mongo document
        set value "UUID of Player" of {_doc} to UUID of player
        set value "Player Name" of {_doc} to "%player%"
        set value "CoinFlips Won" of {_doc} to 0
        set value "CoinFlips Lost" of {_doc} to 0
        set value "CoinFlip Balance Won" of {_doc} to 0
        set value "CoinFlip Balance Lost" of {_doc} to 0
        set value "CoinFlip Room Toggle" of {_doc} to 0
        set value "CoinFlip Selected room" of {_doc} to "&8[&eLow&8]"
        set value "CoinFlip Help Read" of {_doc} to "false"
        save {_doc} in {collection.cf}
    else:
        set value "CoinFlip Room Toggle" of {_doc} to 0
        set value "CoinFlip Selected room" of {_doc} to "&8[&eLow&8]"
        save {_doc} in {collection.cf}

options:
    Name.GUI: &6» &b&lCoin&3&lFlip
    Name.GUI.Loading: &B&lC&3&lF&r
    Prefix: &b&lFast&3&lGens &8➤

function roomToggleName(p: player):
    set {_doc} to first document where "UUID of Player" is UUID of {_p} in {collection.cf}
    if value "CoinFlip Room Toggle" of {_doc} is 0:
        set value "CoinFlip Selected room" of {_doc} to "&8[&eLow&8]"
    else if value "CoinFlip Room Toggle" of {_doc} is 1:
        set value "CoinFlip Selected room" of {_doc} to "&8[&6Med&8]" 
    else if value "CoinFlip Room Toggle" of {_doc} is 2:
        set value "CoinFlip Selected room" of {_doc} to "&8[&cHigh&8]"
    else if value "CoinFlip Room Toggle" of {_doc} is 3:
        set value "CoinFlip Selected room" of {_doc} to "&8[&4Mega&8]"
    else if value "CoinFlip Room Toggle" of {_doc} is 4:
        set value "CoinFlip Selected room" of {_doc} to "&8[&dUltra&8]"
    else if value "CoinFlip Room Toggle" of {_doc} is 5:
        set value "CoinFlip Selected room" of {_doc} to "&8[&5Insane&8]"
    else if value "CoinFlip Room Toggle" of {_doc} is 6:
        set value "CoinFlip Selected room" of {_doc} to "&8[&b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls&8]"
    save {_doc} in {collection.cf} 
    make {_p} execute command "cf"

function roomToggle(p: player, type: int = 0):
    set {_doc} to first document where "UUID of Player" is UUID of {_p} in {collection.cf}
    if {_type} is 0:
        set {_rt} to value "CoinFlip Room Toggle" of {_doc}
        add 1 to {_rt}
        if {_rt} is 7:
            set {_rt} to 0
        set value "CoinFlip Room Toggle" of {_doc} to {_rt}    
    if {_type} is 1:
        set {_rt} to value "CoinFlip Room Toggle" of {_doc}
        remove 1 from {_rt}
        if {_rt} is -1:
            set {_rt} to 6
        set value "CoinFlip Room Toggle" of {_doc} to {_rt}
    save {_doc} in {collection.cf} 
    roomToggleName({_p})

function coinflipCreate(p: player, room: string):
    send "   &7&oLoading..." to {_p}
    wait 1 seconds
    send "   &7&oCreating your CoinFlip..." to {_p}
    wait 2 seconds
    send "   &7&oCoinFlip Created " to {_p}
    send "   &7&oWaiting for a player." to {_p}
    send "   &7&oThis CF has been added to the &8[%{_room}%&8] &7&oroom" to {_p}

function coinflipformatNum(p: player, room: string, n: number) :: string:
    set {_l::*} to split "k,M,B,T,Qn,Qi,Sx" at ","
    set {_i} to min(floor(log({_n})/3), size of {_l::*})
    return "%{_n}%" if {_i} <= 0
    set {_i2} to 1000^{_i}
    set {_bet} to "%{_n}/{_i2}%%{_l::%{_i}%}%"
    wait 5 seconds
    coinflipAnnounce({_p}, "%{_room}%", "%{_bet}%")

function coinflipAnnounce(p: player, room: string, bet: string):
    broadcast ""
    broadcast "        &6&l%{_p}% &ehas made a &b&lCoin&3&lFlip"
    broadcast "        &eBet Amount: &2$&a%{_bet}%"
    broadcast "        &eRoom: &8[%{_room}%&8]"
    broadcast ""

on inventory close:
    if event-inventory's display name contains "{@Name.GUI}":
        set {cf.open::%player%} to false

function coinflipRoomCheck(p: player) :: string:
    set {_doc} to first document where "UUID of Player" is UUID of {_p} in {collection.cf}
    if value "CoinFlip Room Toggle" of {_doc} is 0:
        set {_cfrcreturn} to "low"
    if value "CoinFlip Room Toggle" of {_doc} is 1:
        set {_cfrcreturn} to "med"
    if value "CoinFlip Room Toggle" of {_doc} is 2:
        set {_cfrcreturn} to "high"
    if value "CoinFlip Room Toggle" of {_doc} is 3:
        set {_cfrcreturn} to "mega"
    if value "CoinFlip Room Toggle" of {_doc} is 4:
        set {_cfrcreturn} to "ultra"
    if value "CoinFlip Room Toggle" of {_doc} is 5:
        set {_cfrcreturn} to "insane"
    if value "CoinFlip Room Toggle" of {_doc} is 6:
        set {_cfrcreturn} to "ludicrous"
    save {_doc} in {collection.cf} 
    return {_cfrcreturn}

function coinflipAmountCheck(p: player, amount: number) :: string:
    set {_doc} to first document where "UUID of Player" is UUID of {_p} in {collection.cf}
    if {_amount} is between 1000 and 499999:
        set {_room} to "&eLow"
        set value "CoinFlip Room Toggle" of {_doc} to 0
    if {_amount} is between 500000 and 4999999:
        set {_room} to "&6Med"
        set value "CoinFlip Room Toggle" of {_doc} to 1
    if {_amount} is between 5000000 and 249999999:
        set {_room} to "&cHigh"
        set value "CoinFlip Room Toggle" of {_doc} to 2
    if {_amount} is between 250000000 and 999999999:
        set {_room} to "&4Mega"
        set value "CoinFlip Room Toggle" of {_doc} to 3
    if {_amount} is between 1000000000 and 1999999999:
        set {_room} to "&dUltra"
        set value "CoinFlip Room Toggle" of {_doc} to 4
    if {_amount} is between 2000000000 and 9999999999:
        set {_room} to "&5Insane"
        set value "CoinFlip Room Toggle" of {_doc} to 5
    if {_amount} is more than 9999999999:
        set {_room} to "&b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls"
        set value "CoinFlip Room Toggle" of {_doc} to 6
    save {_doc} in {collection.cf} 
    return {_room}

command /cf [<text>] [<int>] [<player>]:
    aliases: /coinflip, /cflip, /coinf
    trigger:
        set {_doc} to first document where "UUID of Player" is UUID of player in {collection.cf}
        if arg 1 is not set:
            if value "CoinFlip Help Read" of {_doc} is "false":
                open virtual hopper inventory named "{@Name.GUI}" to player
                format a gui slot 0, 1, 2, 3 and 4 of player with glowing book named "&e&lRead Me" with lore "&e&lClick Me" to close then run player command "/cf help"
                set value "CoinFlip Help Read" of {_doc} to "true"
                save {_doc} in {collection.cf}
            else:
                set {_bal} to player' balance
                create a gui with virtual chest named "{@Name.GUI}" with 4 rows:
                    make gui slot 27 to skull of player named "&6» &eStats" with lore "", "&6» &eYour Money&7: &c%{_bal}%", "&6» &eNumber of CoinFlips won&7: &a%value ""CoinFlips Won"" of {_doc}%", "&6» &eNumber of CoinFlips Lost&7: &c%value ""CoinFlips Lost"" of {_doc}%", "", "&6» &eBalance won &7: &2$&a%value ""CoinFlip Balance Won"" of {_doc}%" and  "&6» &eBalance lost &7: &2$&c%value ""CoinFlip Balance Lost"" of {_doc}%"
                    make gui slot 31 to glowing book named "&6» &eCommands" with lore "", "&6» &e/cf help", "&6» &e/cf create <amount>", "&6» &e/cf leave" and ""
                    make gui slot 33 to skull of "DaddyCeacer" parsed as offline player named "&eMade By &6DaddyCeacer"
                    set {_slot} to 0
                    wait 2 ticks
                    set {cf.open::%player%} to true
                    set {_cfrcreturn} to coinflipRoomCheck(player)
                    set {_filter} to new mongo filter where "room" is {_cfrcreturn}
                    set {_coinflips::*} to all documents with filter {_filter} in {collection.cfbets}
                    loop {_coinflips::*}:
                        set {_text} to value "player" of loop-value
                        make gui slot {_slot} to skull of "%value ""player"" of loop-value%" parsed as offline player named "&6» &eCoin Flip" with lore "", "&6» &ePlayer&7: &c%value ""player"" of loop-value%" and "&6» &eBet&7: $&c%value ""bet"" of loop-value%":
                            make player execute command "cf play 12 %{_text}%"
                        add 1 to {_slot}
                        if {cf.open::%player%} is false:
                            stop loop
                        else:
                            continue
                    
                    make gui slot 35 to stone button named "&6» &eChange Room" with lore "", "&6» &eLow Roller &8(&2$&a1000 &e» &2$&a499k&8)", "&6» &6Med &eRoller &8(&2$&a500k &e» &2$&a4.9M&8)", "&6» &cHigh &eRoller &8(&2$&a5M &e» &2$&a249M&8)", "&6» &4Mega &eRoller &8(&2$&a250M &e» &2$&a999M&8)", "&6» &dUltra &eRoller &8(&2$&a1B &e» &2$&a1.9B&8)", "&6» &5Insane &eRoller &8(&2$&a2B &e» &2$&a9.9B&8)", "&6» &b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls &eRoller &8(&2$&a10B &eand up&8)", "",  "&6» &eCurrent %value ""CoinFlip Selected room"" of {_doc}%", "", "&a&lLeft Click &7- &eNext Room" and "&a&lRight Click &7- &ePrevious Room":
                        if click type is left mouse button:
                            roomToggle(player, 0)
                        if click type is right mouse button:    
                            roomToggle(player, 1)
                        
                open last gui to player
                stop    
        
        if arg-1 is "leave":
            if {cf.%player%} is true:
                set {_doc} to document where "player" is name of player in {collection.cfbets}
                set {_bet} to value "bet" of {_doc}
                send "{@Prefix} &eYour bet of &2$&a%{_bet}% &ehas been refunded."
                add {_bet} to player's balance
                clear {cf.%player%}
                delete mongo document {_doc} from {collection.cfbets}
            else:
                send "{@Prefix} &eYou do not have an open &b&lC&3&lF."

        if arg 1 is "h" or "help":
            send ""
            send "{@Prefix} &b&lCoin&r &l&3Flip&r"
            send ""
            send "&c&l» &eTo make a &b&lC&3&lF &r&edo &6&o/cf create <amount>"
            send "&c&l» &eOnce a &b&lC&3&lF &r&eis made you will have to wait for another player to play it."
            send ""
            send "&c&l» &eYou can change rooms by clicking on the button in &6&o/cf "
            send ""
            send "&c&l» &eA number between &8(&b1&8) &eand &8(&b100&8) &ewill be selected"
            send ""
            send "&c&l» &eIf you log off before your &b&lC&3&lF &r&eis played, your money will be returned."
            send ""
            send "&c&l» &eYou can use &6&o/cf leave &eto leave your &b&lC&3&lF"
            send ""
            send "&c&l» &eTen percent of final bet will be taken."
            send ""

        if arg 1 is "create":
            if arg 2 is set:        
                if player's balance is greater than or equal to arg-2:
                    if {cf.%player%} is not set:
                        set {_room} to coinflipAmountCheck(player, arg 2)
                        set {_roomannounce} to coinflipRoomCheck(player)
                        set {_filter} to new mongo filter where "room" is {_roomannounce}
                        set {_coinflips::*} to all documents with filter {_filter} in {collection.cfbets}
                        if (amount of {_coinflips::*}) < 27:
                            set {_doc} to new mongo document
                            set {cf.%player%} to true
                            set value "room" of {_doc} to {_roomannounce}
                            set value "player" of {_doc} to name of player
                            set value "bet" of {_doc} to arg 2
                            save document {_doc} in {collection.cfbets}
                            remove arg 2 from player's balance
                            send "{@Prefix} &eYour bet of &2$&a%arg 2% &ehas been registered."
                            coinflipCreate(player, "%{_room}%")
                            wait 5 seconds
                            if {_room} is "&dUltra", "&5Insane" or "&b&lL&3&lu&b&ld&3&li&b&lc&3&lr&b&lo&3&lu&b&ls":
                                coinflipformatNum(player, "%{_room}%", arg 2)
                        else:
                            send "{@Prefix} &eYou cannot create one at the moment, the room is full."
                    else:
                        send "{@Prefix} &eYou cannot create another one at the moment."     
                else:
                    send "{@Prefix} &eYou do not have enough money."
            else:
                send "{@Prefix} &ePlease enter an amount."      

        if arg 1 is "play":
            if arg 2 is set:
                if arg 3 is set:
                    if arg 3 is online:
                        if arg 3 is not player:
                            set {_doc} to first document where "player" is name of arg 3 in {collection.cfbets}
                            set {_bet} to value "bet" of {_doc}
                            if player's balance is greater than or equal to {_bet}:
                                if {cf.%player%} is not set:
                                    if {cf.%arg-3%} is set:
                                        clear {cf.%arg-3%} and {cf.%player%}
                                        send "{@Prefix} &7&oLoading ..." to player and arg 3
                                        wait 3 ticks
                                        send "{@Prefix} &7&oCoinFlip Opening" to player and arg 3
                                        remove {_bet} from player's balance
                                        send "{@Prefix} &eYou have matched &6&l%arg 3%&6&l's &ebet of &2$&a%{_bet}%."
                                        set {_finalBet} to {_bet} + {_bet}
                                        set {_finalBet} to (({_finalBet}/100) * 90)
                                        delete mongo document {_doc} from {collection.cfbets} 
                                        remove arg 3 from {coinflip::*}, {coinflip.low::*}, {coinflip.med::*}, {coinflip.high::*}, {coinflip.mega::*}, {coinflip.ultra::*}, {coinflip.insane::*} and {coinflip.ludicrous::*}                            
                                        loop 5 times:
                                            open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading." to player and arg 3
                                            wait 3 ticks
                                            open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading.." to player and arg 3
                                            wait 3 ticks
                                            open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading..." to player and arg 3
                                            wait 3 ticks
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading.." to player and arg 3
                                        wait 3 ticks
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading." to player and arg 3
                                        wait 3 ticks                            
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoading" to player and arg 3
                                        wait 3 ticks                            
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoadin" to player and arg 3
                                        wait 3 ticks
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoadi" to player and arg 3
                                        wait 3 ticks                            
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoad" to player and arg 3
                                        wait 3 ticks
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLoa" to player and arg 3
                                        wait 3 ticks
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oLo" to player and arg 3
                                        wait 3 ticks        
                                        open chest with 1 row named "{@Name.GUI.Loading} &7&oL" to player and arg 3
                                        wait 3 ticks    
                                        open chest with 1 row named "{@Name.GUI.Loading}" to player and arg 3
                                        wait 3 ticks        
                                        set {_slot} to 0
                                        loop 25 times:
                                            loop 9 times:
                                                set {_RI} to random integer between 1 and 15
                                                set {_FIGURE} to random integer between 9999 and 99999
                                                if event-inventory's display name is "{@Name.GUI.Loading}":
                                                    evaluate "format gui slot %{_slot}% of player with 160:%{_RI}% named ""&6» &e%{_FIGURE}%"" to do nothing"
                                                if event-inventory's display name is "{@Name.GUI.Loading}":
                                                    if {_RI} = 1:
                                                        format gui slot {_slot} of player and arg 3 with orange glass named "&6» &e%{_FIGURE}%" to do nothing                                               
                                                    if {_RI} = 2:
                                                        format gui slot {_slot} of player and arg 3 with magenta glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 3:
                                                        format gui slot {_slot} of player and arg 3 with light blue glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 4:
                                                        format gui slot {_slot} of player and arg 3 with yellow glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 5:
                                                        format gui slot {_slot} of player and arg 3 with light green glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 6:
                                                        format gui slot {_slot} of player and arg 3 with pink glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 7:
                                                        format gui slot {_slot} of player and arg 3 with gray glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 8:
                                                        format gui slot {_slot} of player and arg 3 with light gray glass named "&6» &e%{_FIGURE}%" to do nothing   
                                                    if {_RI} = 9:
                                                        format gui slot {_slot} of player and arg 3 with cyan glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 10:
                                                        format gui slot {_slot} of player and arg 3 with purple glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 11:
                                                        format gui slot {_slot} of player and arg 3 with blue glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 12:
                                                        format gui slot {_slot} of player and arg 3 with brown glass named "&6» &e%{_FIGURE}%" to do nothing    
                                                    if {_RI} = 13:
                                                        format gui slot {_slot} of player and arg 3 with green glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 14:
                                                        format gui slot {_slot} of player and arg 3 with red glass named "&6» &e%{_FIGURE}%" to do nothing
                                                    if {_RI} = 15:
                                                        format gui slot {_slot} of player and arg 3 with black glass named "&6» &e%{_FIGURE}%" to do nothing                                                
                                                add 1 to {_slot}
                                            set {_FIGURE} to random integer between 1 and 2
                                            if {_FIGURE} = 1:
                                                if event-inventory's display name is "{@Name.GUI.Loading}":
                                                    format gui slot 4 of arg 3 with skull of "%player%" parsed as offline player named "&6» &e%player%" to do nothing
                                                if event-inventory's display name is "{@Name.GUI.Loading}":
                                                    format gui slot 4 of player with skull of "%arg-3%" parsed as offline player named "&6» &e%arg-3%" to do nothing
                                            else if {_FIGURE} = 2:
                                                if event-inventory's display name is "{@Name.GUI.Loading}":
                                                    format gui slot 4 of arg 3 with skull of "%arg-3%" parsed as offline player named "&6» &e%arg-3%" to do nothing
                                                if event-inventory's display name is "{@Name.GUI.Loading}":
                                                    format gui slot 4 of player with skull of "%player%" parsed as offline player named "&6» &e%player%" to do nothing                                  
                                            set {_slot} to 0
                                            wait 3 ticks        
                                        set {_END} to random integer between 1 and 100
                                        close player and arg 3's inventory
                                        if {_END} is greater than or equal to 51:                         
                                            send "" to player and arg 3
                                            send "" to player and arg 3
                                            send "{@Prefix} &7&oYou won the Coinflip !"
                                            send "{@Prefix} &7&oYou lost the CoinFlip !" to arg 3
                                            send "{@Prefix} &7&oSo you won &6$%{_finalBet}%"
                                            send "{@Prefix} &7&oYou lost &6$%{_bet}%" to arg 3
                                            send "{@Prefix} &7The winning number was &6%{_END}%" to player and arg 3
                                            send "" to player and arg 3
                                            send "" to player and arg 3
                                            send "{@Prefix} &eYour winnings of &2$&a%{_finalBet}% &ehave been debited to your account."
                                            coinflipOutCome("%player%", "%arg 3%", {_bet})
                                            add {_finalBet} to player's balance
                                            coinflipLogs("%player%", "%arg 3%", "%{_finalBet}%", {_END}) 
                                        if {_END} is less than or equal to 50:
                                            send "" to player and arg 3
                                            send "" to player and arg 3
                                            send "{@Prefix} &7&oYou won the Coinflip !" to arg 3
                                            send "{@Prefix} &7&oYou lost the CoinFlip !" 
                                            send "{@Prefix} &7&oSo you won &6$%{_finalBet}%" to arg 3
                                            send "{@Prefix} &7&oYou lost &6$%{_bet}%"
                                            send "{@Prefix} &7The winning number was &6%{_END}%" to player and arg 3                                
                                            send "" to player and arg 3
                                            send "" to player and arg 3
                                            send "{@Prefix} &eYour winnings of &2$&a%{_finalBet}% &ehave been debited to your account." to arg 3
                                            coinflipOutCome("%arg 3%", "%player%", {_bet})
                                            add {_finalBet} to arg-3's balance
                                            coinflipLogs("%arg 3%", "%player%", "%{_finalBet}%", {_END})   
                                        stop
                                    else:
                                        send "{@Prefix} &eSomeone has already played this CF."
                                else:
                                    send "{@Prefix} &eYou cannot play a CF while you have one set."
                                    send "{@Prefix} &eUse &6&o/cf leave &ebefore trying again."
                            else:
                                send "{@Prefix} &eYou do not have enough money."
                        else:
                            send "{@Prefix} &eYou can't play alone."    
                        close player's inventory                                    
                    
        if arg 1 is "reload" or "rl":
            if player has permission "cf.admin":
                set {_t} to now
                make player execute command "sk reload %script name%"
                send "&6[&eCoinFlip&6] &eSkript created by &aDaddy&5Ceacer &7(Skript reload in &8%difference between now and {_t}%&7)"
            else:
                send "&cYou do not have the required permission to do this."

function coinflipLogs(w: string, l: string, a: string, n: number):
    set {_doc} to new mongo document
    set value "winner" of {_doc} to "%{_w}%"
    set value "loser" of {_doc} to "%{_l}%"
    set value "amount" of {_doc} to "%{_a}%"
    set value "number" of {_doc} to "%{_n}%"
    save document {_doc} in {collection.cflogs} 

function coinflipOutCome(w: string, l: string, a: number):
    set {_doc} to first document where "UUID of Player" is UUID of ({_w} parsed as an offline player) in {collection.cf}
    set {_value} to value "CoinFlips Won" of {_doc}
    add 1 to {_value}
    set value "CoinFlips Won" of {_doc} to {_value}
    set {_value} to value "CoinFlip Balance Won" of {_doc}
    wait 1 second
    set {_value} to {_value} + {_a}
    set value "CoinFlip Balance Won" of {_doc} to {_value}
    save {_doc} in {collection.cf}
    set {_doc} to first document where "UUID of Player" is UUID of ({_l} parsed as an offline player) in {collection.cf}
    set {_value} to value "CoinFlips Lost" of {_doc}
    add 1 to {_value}
    set value "CoinFlips Lost" of {_doc} to {_value}
    set {_value} to value "CoinFlip Balance Lost" of {_doc}
    wait 1 second
    set {_value} to {_value} + {_a}
    set value "CoinFlip Balance Lost" of {_doc} to {_value}
    save {_doc} in {collection.cf}

on quit:
    set {_doc} to document where "player" is name of player in {collection.cfbets}
    set {_bet} to value "bet" of {_doc}
    send "{@Prefix} &eYour bet of &2$&a%{_bet}% &ehas been refunded."
    add {_bet} to player's balance
    clear {cf.%player%}
    delete mongo document {_doc} from {collection.cfbets}