on join:
	if file "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml" doesn't exist:
		create file "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml"
		set yaml value "Data of" from "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml" to "%player%"
		set yaml value "balance" from "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml" to "%player's balance%"
		set {bal::%uuid of player%} to yaml value "balance" from "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml"
	else if file "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml" does exist:
		set yaml value "Data of" from "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml" to "%player%"
		set yaml value "balance" from "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml" to "%player's balance%"
		set {bal::%uuid of player%} to yaml value "balance" from "C:\Users\ceace\Desktop\Skript server\plugins\Skript\skript-yaml\%uuid of player%.yml"



#command /top:
#	trigger:
#		set {_size} to 0
#		set {_topnumber} to 0
#		loop {_baltop::*}:
#			add 1 to {_size}
#			if {_low.to.high.list::%loop-value%} is not set:
#				set {_low.to.high.list::%loop-value%} to loop-index
#			else:
#				set {_n} to 0
#				loop {_size} times:
#					set {_n} to {_n}+1
#					if {_low.to.high.list::%loop-value-1%.%{_n}%} is not set:
#						set {_low.to.high.list::%loop-value-1%.%{_n}%} to loop-index
#					stop loop
#		wait 1 tick
#		set {_n} to size of {_low.to.high.list::*}
#		loop {_low.to.high.list::*}:
#			set {_high.to.low.list::%{_n}%} to loop-value
#			set {_n} to {_n}-1
#		wait 1 tick
#		set {_total.balances} to 0
#		send "   &8&m-----&r &6✎ &e&lTop 10 Balances&r &6✐ &8&m-----"
#		send ""
#		loop {_high.to.low.list::*}:
#			add 1 to {_topnumber}
#			set {_player} to "%loop-value%" parsed as offlineplayer
#			send "    &7%{_topnumber}%&7. &a%{_player}% &8➭ &7%{_baltop::%loop-value%}%&7€"
#			if {_topnumber} = 10:
#				stop
#			add 1 to {_total.balances}
#		send ""
#		send " &7There are a total of &a%{_total.balances}% &7registred acounts"

command /baltop:
    trigger:
        set {_sortedList::*} to sorted {bal::*}
        loop {bal::*}:
            add 1 to {_count}
            set {_indexes::%loop-value%} to loop-index
            if mod({_count}, 20) = 0:
                wait 1 tick
        set {_n} to 0
        loop {_sortedList::*}:
            add 1 to {_n}
            set {_current} to {_indexes::%loop-value%} parsed as offline player
            set {_msg::%{_n}%} to "&7%{_current}% &f- &6%loop-value% bal"
            {_n} = 10
            exit 1 loop
        message "&7&m      &7< &a&lTop Balances &7>&7&m      "
        loop {_msg::*}:
            set {_current} to loop-index parsed as int - 1
            set {_c} to size of {_msg::*} - {_current}
            add {_msg::%{_c}%} to {_invertedList::*}
        set {_n} to 0
        loop {_invertedList::*}:
            add 1 to {_n}
            message "&a##%{_n}% %loop-value%"